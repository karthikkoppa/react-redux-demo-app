{"version":3,"sources":["services/index.js","reducers/reducer.js","reducers/index.js","app/store.js","upload/FileUpload.js","Table/Modal.js","Table/CellUncontrolled.js","Table/Cell.js","Table/Headers.js","Table/Row.js","Table/Body.js","Table/Table.js","App.js","serviceWorker.js","index.js"],"names":["request","action","Promise","resolve","response","addRow","after","type","validateCells","getNewCell","index","value","readOnly","cell","id","Math","random","initialState","headers","image","count","rows","surveys","selectedRows","combineReducers","table","state","newHeader","headersLeft","slice","headersRight","map","row","newRowCell","left","right","column","cellsLeft","cellsRight","newColumns","h","isSurvey","length","name","newRow","rowsBefore","rowsAfter","JSON","parse","stringify","parseInt","i","body","newHeaders","setHeader","hasImageColumn","find","e","push","hasCategoryColumn","hasDescriptionColumn","hasCollectionColumn","hasAvlbleColumn","data","k","isNotValid","tmp","newRows","validate","isValid","updatedCell","errors","Array","isArray","preloadedState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","FileUpload","props","handleFile","bind","file","reader","FileReader","rABS","readAsBinaryString","onload","result","target","wb","XLSX","read","wsname","SheetNames","ws","Sheets","utils","sheet_to_json","header","setTable","readAsArrayBuffer","this","React","Component","mapDispatchToProps","dispatch","connect","DataInput","handleChange","fileInput","createRef","files","style","marginLeft","onClick","current","click","className","ref","hidden","accept","SheetJSFT","onChange","x","join","customStyles","content","top","bottom","marginRight","transform","isOpen","onRequestClose","closeModal","contentLabel","item","TableCellUncontrolled","showModal","setState","readOnlyClass","key","undefined","onBlur","disabled","Cell","lastKey","mouseOver","onTab","onKeyDown","onMouseEnter","onMouseLeave","onCellChange","isLastCell","onAddRow","onAddColumn","onDeleteColumn","onDeleteRow","isHeader","showAddColumnBtn","showDeleteColumnBtn","showDeleteRowBtn","hasErrors","DeleteRow","DeleteColumn","AddColumn","IconPlus","IconTimes","Headers","j","Row","cells","isLastRow","Spinner","width","height","viewBox","preserveAspectRatio","cx","cy","fill","stroke","strokeWidth","r","strokeDasharray","attributeName","calcMode","values","keyTimes","dur","begin","repeatCount","Body","offset","placeholder","Table","App","initialiseTable","then","Boolean","location","hostname","match","store","createStore","rootReducer","applyMiddleware","thunk","rootElement","document","getElementById","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c29a15b8.chunk.js","sourcesContent":["// import listSurveysResponse from \"../mocks/ListSurveys\";\n\nexport const request = action => {\n  switch (action) {\n    case \"LIST_SURVEYS\": {\n      return Promise.resolve({ response: '' });\n    }\n    default:\n      return Promise.resolve({});\n  }\n};\n","import { request } from \"../services\";\n// import { parsePhoneNumber } from \"libphonenumber-js\";\n\nconst ADD_COLUMN = \"ADD_COLUMN\";\nconst DELETE_COLUMN = \"DELETE_COLUMN\";\nconst ADD_ROW = \"ADD_ROW\";\nconst DELETE_ROW = \"DELETE_ROW\";\nconst UPDATE_CELL = \"UPDATE_CELL\";\nconst SET_HEADERS = \"SET_HEADERS\";\nconst SET_BODY = \"SET_BODY\";\nconst SET_TABLE = \"SET_TABLE\";\nconst VALIDATE_CELLS = \"VALIDATE_CELLS\";\nconst PARSE_CELLS = \"PARSE_CELLS\";\nconst LIST_SURVEYS = \"LIST_SURVEYS\";\nconst CREATE_PATIENTS_AND_SEND_SURVEYS = \"CREATE_PATIENTS_AND_SEND_SURVEYS\";\n\nexport const addColumn = after => ({ type: ADD_COLUMN, after });\nexport const deleteColumn = column => ({ type: DELETE_COLUMN, column });\nexport const addRow = after => ({ type: ADD_ROW, after });\nexport const deleteRow = row => ({ type: DELETE_ROW, row });\nexport const updateCell = (row, column, value) => ({\n  type: UPDATE_CELL,\n  row,\n  column,\n  value\n});\nexport const setHeaders = headers => ({ type: SET_HEADERS, headers });\nexport const setBody = body => ({ type: SET_BODY, body });\nexport const setTable = rows => dispatch => {\n  dispatch({ type: SET_TABLE, rows });\n};\nexport const validateCells = () => ({ type: VALIDATE_CELLS });\nexport const parseCells = () => ({ type: PARSE_CELLS });\n\nexport const listSurveys = () => dispatch => {\n  return request(LIST_SURVEYS).then(({ response }) =>\n    dispatch({ type: LIST_SURVEYS, surveys: response })\n  );\n};\n\nexport const createPatientsAndSendSurveys = () => dispatch => {\n  return dispatch(validateCells());\n};\n\nexport const initialiseTable = () => dispatch => {\n  return request(LIST_SURVEYS)\n    .then(({ response }) => dispatch({ type: LIST_SURVEYS, surveys: response }))\n    .then(() => dispatch(addRow()));\n};\n\nconst getNewCell = ({ index=-1,value = \"\", readOnly = null, type = \"text\" } = {}) => {\n  const cell = {\n    id: Math.random(),\n    type,\n    value,\n    readOnly: false\n  };\n\n if (\n    value === \"image\" ||\n    value === \"category\" ||\n    value === \"description\" ||\n    value === \"collection\" ||\n    value === \"avlble\"\n  ) {\n    cell.readOnly = true;\n    cell.index = index\n  } else {\n    cell.index = index\n  }\n\n  return cell;\n};\n\n\nconst initialState = {\n  headers: [\n    {\n      id: 1,\n      type: \"text\",\n      value: \"image\",\n      readOnly: true,\n      image: true\n    },\n    {\n      id: 2,\n      type: \"text\",\n      value: \"category\",\n      readOnly: true\n    },\n    {\n      id: 3,\n      type: \"text\",\n      value: \"description\",\n      readOnly: true,\n    },\n    {\n      id: 4,\n      type: \"text\",\n      value: \"collection\",\n      readOnly: true\n    },\n    {\n      id: 5,\n      type: \"text\",\n      value: \"avlble\",\n      readOnly: true\n    },\n    {\n      id: 6,\n      type: \"button\",\n      value: \"count\",\n      count: true\n    }\n  ],\n  rows: [],\n  surveys: [],\n  selectedRows: []\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_COLUMN:\n      const { after } = action;\n      const newHeader = getNewCell();\n      // add new header cell to existing header row\n      const headersLeft = [...state.headers].slice(0, after + 1);\n      const headersRight = [...state.headers].slice(after + 1);\n      const headers = [...headersLeft, newHeader, ...headersRight];\n      // add new column to existing rows\n      const rows = state.rows.map(row => {\n        const newRowCell = getNewCell();\n        const left = [...row].slice(0, after + 1);\n        const right = [...row].slice(after + 1);\n        const newRow = [...left, newRowCell, ...right];\n        return newRow;\n      });\n\n      return { ...state, headers, rows };\n    case DELETE_COLUMN: {\n      const { column = 0 } = action;\n      const headersLeft = [...state.headers].slice(0, column);\n      const headersRight = [...state.headers].slice(column + 1);\n      const headers = [...headersLeft, ...headersRight];\n\n      const rows = state.rows.map(row => {\n        const cellsLeft = [...row].slice(0, column);\n        const cellsRight = [...row].slice(column + 1);\n        return [...cellsLeft, ...cellsRight];\n      });\n\n      return {\n        ...state,\n        headers,\n        rows\n      };\n    }\n    case ADD_ROW: {\n      const { after = 0 } = action;\n      const newColumns = state.headers.map(h => {\n        const isSurvey = h.value === \"Survey\";\n        const type = isSurvey ? \"survey\" : \"text\";\n        const value =\n          isSurvey && state.surveys.length === 1 ? state.surveys[0].name : \"\";\n        return getNewCell({ type, value });\n      });\n      const newRow = [newColumns];\n      const rowsBefore = [...state.rows].slice(0, after);\n      const rowsAfter = [...state.rows].slice(after);\n      const rows = [...rowsBefore, ...newRow, ...rowsAfter];\n      return { ...state, rows };\n    }\n    case DELETE_ROW: {\n      const { row } = action;\n      const rowsBefore = [...state.rows].slice(0, row);\n      const rowsAfter = [...state.rows].slice(row + 1);\n      return { ...state, rows: [...rowsBefore, ...rowsAfter] };\n    }\n    case UPDATE_CELL: {\n      \n      const { row, column } = action;\n      let { value } = action;\n    \n      // update cell\n      if (typeof row !== \"undefined\") {\n        const rows = JSON.parse(JSON.stringify(state.rows));\n        const selectedRows = JSON.parse(JSON.stringify(state.selectedRows));\n        if(column === 5){\n          value = rows[row][column].value === \"\" ? 1 : parseInt(rows[row][column].value) + 1;\n          selectedRows[row] = rows[row];\n        }\n        rows[row][column].value = value;\n        // const rows = state.rows.map((r, i) => {\n        //   return r.map((cell, j) => {\n        //     if (i === row && j === column) {\n        //       cell.value = value;\n        //     }\n        //     return cell;\n        //   });\n        // });\n        return { ...state, rows, selectedRows };\n      }\n\n      // update header\n      const headers = state.headers.map((h, i) => {\n        if (i === column) {\n          h.value = value;\n        }\n        return h;\n      });\n      return { ...state, headers };\n    }\n    case SET_TABLE: {\n      const { rows } = action;\n      const headers = rows[0];\n      const body = rows.slice(1);\n      // set headers\n      const newHeaders = headers.map((h, i) => getNewCell({ value: h , index:i}));\n      let setHeader = [];\n      \n      const hasImageColumn = newHeaders.find(e => e.value === \"additional_image\");\n      if (hasImageColumn) {\n        setHeader.push(getNewCell({ value: \"image\", readOnly: true ,index : hasImageColumn.index}));\n      }\n\n      const hasCategoryColumn = newHeaders.find(e => e.value === \"category\");\n      if (hasCategoryColumn) {\n        setHeader.push(getNewCell({ value: \"category\", readOnly: true, index : hasCategoryColumn.index }));\n      }\n\n      const hasDescriptionColumn = newHeaders.find(e => e.value === \"description\");\n      if (hasDescriptionColumn) {\n        setHeader.push(getNewCell({ value: \"description\", readOnly: true , index : hasDescriptionColumn.index}));\n      }\n\n      const hasCollectionColumn = newHeaders.find(e => e.value === \"collection\");\n      if (hasCollectionColumn) {\n        setHeader.push(getNewCell({ value: \"collection\", readOnly: true, index : hasCollectionColumn.index }));\n      }\n\n      const hasAvlbleColumn = newHeaders.find(e => e.value === \"avlble\");\n      if (hasAvlbleColumn) {\n        setHeader.push(getNewCell({ value: \"avlble\", readOnly: true , index : hasAvlbleColumn.index}));\n      }\n\n     \n      setHeader.push(getNewCell({ value: \"count\", readOnly: true , index : -1}));\n      \n      // set body\n     \n      const data = [];\n      for (var k = 0; k < body.length; k++) {\n        let isNotValid = null\n        if (k === 1000) {\n          break;\n        } else {\n          const tmp = [];\n          for (let i = 0; i < setHeader.length; i++) {\n            const index = setHeader[i].index;\n            const type = \"text\";\n            const value = index >= 0 ? body[k][index] : '';\n            if(setHeader[i].value === \"avlble\" && value === 0){\n              //bypass\n              isNotValid = true;\n            } else if(!isNotValid){\n              isNotValid = false;\n              tmp.push(getNewCell({ type, value }));\n            }\n          }\n          if(!isNotValid){\n          data.push(tmp);\n          }\n        }\n      };\n      \n      return { ...state, headers: setHeader, rows: data };\n    }\n    case VALIDATE_CELLS: {\n      const { headers, rows } = state;\n      const newRows = rows.map(row => {\n        return row.map((cell, i) => {\n          if (headers[i].validate) {\n            const isValid = headers[i].validate(cell.value);\n            const updatedCell = { ...cell };\n            updatedCell.errors = isValid ? [] : [\"Number not valid\"];\n            return updatedCell;\n          }\n          return cell;\n        });\n      });\n      return { ...state, rows: newRows };\n    }\n    case PARSE_CELLS: {\n      const { headers, rows } = state;\n      const newRows = rows.map(row => {\n        return row.map((cell, i) => {\n          if (\n            headers[i].parse &&\n            Array.isArray(cell.errors) &&\n            cell.errors.length === 0\n          ) {\n            const updatedCell = JSON.parse(JSON.stringify(cell));\n            updatedCell.value = headers[i].parse(updatedCell.value);\n            return updatedCell;\n          }\n          return cell;\n        });\n      });\n      return { ...state, rows: newRows };\n    }\n    // case CREATE_PATIENTS_AND_SEND_SURVEYS: {\n\n    // }\n    case LIST_SURVEYS: {\n      return { ...state, surveys: action.surveys };\n    }\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport table from \"./reducer\";\n\nexport default combineReducers({\n  table\n});\n\nexport * from \"./reducer\";\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"../reducers\";\r\n\r\nconst preloadedState = {};\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport default () => {\r\n  const store = createStore(\r\n    rootReducer,\r\n    preloadedState,\r\n    composeEnhancers(applyMiddleware(thunk))\r\n  );\r\n\r\n  return store;\r\n};\r\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport XLSX from \"xlsx\";\nimport { setTable } from \"../reducers\";\n\nclass FileUpload extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleFile = this.handleFile.bind(this);\n  }\n  handleFile(file) {\n    \n    const reader = new FileReader();\n    const rABS = !!reader.readAsBinaryString;\n    reader.onload = ({ target: { result } }) => {\n      const wb = XLSX.read(result, { type: rABS ? \"binary\" : \"array\" });\n      const wsname = wb.SheetNames[0];\n      const ws = wb.Sheets[wsname];\n      const data = XLSX.utils.sheet_to_json(ws, { header: 1 });\n      \n      this.props.setTable(data);\n    };\n    if (rABS) reader.readAsBinaryString(file);\n    else reader.readAsArrayBuffer(file);\n  }\n  render() {\n    return <DataInput handleFile={this.handleFile} />;\n  }\n}\n\nconst mapDispatchToProps = {\n  setTable\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(FileUpload);\n\nclass DataInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.fileInput = React.createRef();\n  }\n  handleChange(e) {\n    const files = e.target.files;\n    if (files && files[0]) this.props.handleFile(files[0]);\n  }\n  render() {\n    return (\n      <>\n        <button\n          style={{ marginLeft: 10 }}\n          onClick={() => this.fileInput.current.click()}\n        >\n          <i className=\"fas fa-upload\" />\n          &nbsp; Upload & Publish\n        </button>\n        <input\n          ref={this.fileInput}\n          type=\"file\"\n          hidden\n          accept={SheetJSFT}\n          onChange={this.handleChange}\n        />\n      </>\n    );\n  }\n}\n\nconst SheetJSFT = [\n  \"xlsx\",\n  \"xlsb\",\n  \"xlsm\",\n  \"xls\",\n  \"xml\",\n  \"csv\",\n  \"txt\",\n  \"ods\",\n  \"fods\",\n  \"uos\",\n  \"sylk\",\n  \"dif\",\n  \"dbf\",\n  \"prn\",\n  \"qpw\",\n  \"123\",\n  \"wb*\",\n  \"wq*\",\n  \"html\",\n  \"htm\"\n]\n  .map(function(x) {\n    return \".\" + x;\n  })\n  .join(\",\");\n","import React from \"react\";\nimport Modal from 'react-modal';\nimport { connect } from \"react-redux\";\nconst customStyles = {\n    content: {\n        top: '50%',\n        left: '50%',\n        right: 'auto',\n        bottom: 'auto',\n        marginRight: '-50%',\n        transform: 'translate(-50%, -50%)'\n    }\n};\n\nfunction PopupModal(props) {\n    return (\n        <div>\n            <Modal\n                isOpen={props.isOpen}\n                onRequestClose={props.closeModal}\n                style={customStyles}\n                contentLabel=\"Example Modal\"\n            >\n                <div>{\"selected rows\"}</div>\n                <ul>\n                {props.selectedRows && props.selectedRows.map(item => {\n                    return <li>{item[2].value}</li>\n                })}\n                </ul>\n                <button onClick={props.closeModal}>close</button>\n            </Modal>\n        </div>\n    );\n}\n\nconst mapStateToProps = ({ table }) => ({\n    selectedRows: table.selectedRows\n});\n\nexport default connect(\n    mapStateToProps,\n    null\n)(PopupModal);\n","import React from \"react\";\nimport  PopupModal from \"./Modal\"\n\nexport default class TableCellUncontrolled extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { value: props.value , isOpen:false};\n  }\n\n  onChange(e) {\n    \n    this.setState({ value: e.target.value });\n  }\n  onClick(e) {\n    \n    this.props.onChange(e);\n  }\n\n  showModal=()=>{\n    this.setState({\n      isOpen : true\n    })\n  }\n\n  closeModal=()=>{\n    this.setState({\n      isOpen : false\n    })\n  }\n\n  onBlur(e) {\n    if (this.props.onChange) {\n      this.props.onChange(e);\n    }\n  }\n\n  render() {\n    if (this.props.column === 5) {\n      \n    }\n    const readOnlyClass = this.props.readOnly ? \"read-only\" : \"editable\";\n\n    return (\n      <div key={this.props.id} className={readOnlyClass}>\n        <PopupModal closeModal={this.closeModal} isOpen={this.state.isOpen}/>\n        {(this.props.count != undefined && this.props.column === 5) &&\n\n          <button onClick={this.showModal.bind(this)}>view {this.props.count}</button>\n        }\n        {(this.props.column === 5 && this.props.count == undefined) &&\n          <button onClick={this.onClick.bind(this)}>whitelist</button>\n        }\n        {this.props.type !== \"button\" &&\n          <input\n            onChange={this.onChange.bind(this)}\n            onBlur={this.onBlur.bind(this)}\n            value={this.state.value}\n            readOnly={this.props.readOnly}\n            disabled={this.props.readOnly}\n          />\n        }\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport UncontrolledCell from \"./CellUncontrolled\";\n\nimport {\n  addColumn,\n  deleteColumn,\n  addRow,\n  deleteRow,\n  updateCell\n} from \"../reducers\";\n\nclass Cell extends React.Component {\n  state = { lastKey: null, mouseOver: false };\n\n  constructor(props) {\n    super(props);\n    this.onTab = this.onTab.bind(this);\n    this.onKeyDown = this.onKeyDown.bind(this);\n    this.onMouseEnter = this.onMouseEnter.bind(this);\n    this.onMouseLeave = this.onMouseLeave.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  onChange(e) {\n    const value = e.target.value;\n    if (this.props.onCellChange) {\n      this.props.onCellChange(this.props.row, this.props.column, value);\n    }\n  }\n\n  onTab() {\n    if (this.props.isLastCell) {\n      this.props.onAddRow(this.props.row + 1);\n    }\n  }\n\n  onKeyDown(e) {\n    if (e.key === \"Tab\" && this.state.lastKey !== \"Shift\") {\n      this.onTab();\n    }\n    this.setState({ lastKey: e.key });\n  }\n\n  onMouseEnter(e) {\n    this.setState({ mouseOver: true });\n  }\n\n  onMouseLeave(e) {\n    this.setState({ mouseOver: false });\n  }\n\n  render() {\n    const {\n      column,\n      row,\n      onAddColumn,\n      onDeleteColumn,\n      onAddRow,\n      onDeleteRow,\n      readOnly,\n      value,\n      id,\n      type,\n      errors,\n      isHeader,\n      count\n    } = this.props;\n    const { mouseOver } = this.state;\n    const showAddColumnBtn = onAddColumn && mouseOver && isHeader;\n    const showDeleteColumnBtn =\n      onDeleteColumn && !readOnly && mouseOver && isHeader;\n    const showAddRowBtn = false && onAddRow && mouseOver && column === 0;\n    const showDeleteRowBtn =\n      onDeleteRow && mouseOver && column === 0 && !isHeader;\n    const hasErrors = Array.isArray(errors) && errors.length > 0;\n   // \n    return (\n      <div\n        key={\"cell\" + id}\n        className={\"cell \" + (hasErrors ? \"has-errors\" : \"\")}\n        // onKeyDown={this.onKeyDown}\n        // onMouseEnter={this.onMouseEnter}\n        // onMouseLeave={this.onMouseLeave}\n      >\n\n        {/* {type === \"whitelist\" && (\n          <button onChange={this.onChange} defaultValue={value} />\n        )} */}\n\n        {(type === \"text\" || type === \"button\") && (\n          \n          <UncontrolledCell\n            id={id}\n            count={count}\n            readOnly={readOnly}\n            value={value}\n            column={column}\n            onChange={this.onChange}\n          />\n        )}\n\n        {showAddColumnBtn && (\n          <AddColumn column={column} onAddColumn={onAddColumn} />\n        )}\n        {showDeleteColumnBtn && (\n          <DeleteColumn onDeleteColumn={onDeleteColumn} column={column} />\n        )}\n        {showDeleteRowBtn && <DeleteRow onDeleteRow={onDeleteRow} row={row} />}\n        {showAddRowBtn && <AddRow />}\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  onAddColumn: addColumn,\n  onAddRow: addRow,\n  onDeleteColumn: deleteColumn,\n  onDeleteRow: deleteRow,\n  onCellChange: updateCell\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(Cell);\n\nconst DeleteRow = ({ onDeleteRow, row }) => (\n  <div className={\"delete-row\"} onClick={() => onDeleteRow(row)}>\n    <IconTimes />\n  </div>\n);\n\nconst DeleteColumn = ({ onDeleteColumn, column }) => (\n  <div className={\"delete-column\"} onClick={() => onDeleteColumn(column)}>\n    <IconTimes />\n  </div>\n);\n\nconst AddRow = ({ onAddRow, row }) => (\n  <>\n    <div className={\"add-row add-row-before\"}>B+</div>\n    <div className={\"add-row add-row-after\"}>Af+</div>\n  </>\n);\n\nconst AddColumn = ({ onAddColumn, column }) => (\n  <>\n    <div\n      className={\"add-column add-column-before\"}\n      onClick={() => onAddColumn(column - 1)}\n    >\n      <IconPlus />\n    </div>\n    <div\n      className={\"add-column add-column-after\"}\n      onClick={() => onAddColumn(column)}\n    >\n      <IconPlus />\n    </div>\n  </>\n);\n\nconst IconPlus = () => <>+</>;\nconst IconTimes = () => <>x</>;\n","import React from \"react\";\nimport Cell from \"./Cell\";\nimport { connect } from \"react-redux\";\n\nclass Headers extends React.Component {\n  render() {\n    \n    return (\n      <div className={\"header\"}>\n        {this.props.headers.map((cell, j) => (\n          <Cell count={this.props.selectedRows.length} {...cell} isHeader={true} key={cell.id} column={j} />\n        ))}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ table }) => ({\n  headers: table.headers,\n  selectedRows: table.selectedRows\n});\n\nexport default connect(\n  mapStateToProps,\n  null\n)(Headers);\n","import React from \"react\";\nimport Cell from \"./Cell\";\n\nconst Row = ({ row, cells, isLastRow }) => {\n  return (\n    <div className={\"row\"}>\n      {cells.length\n        ? cells.map((cell, j) => (\n            <Cell\n              {...cell}\n              column={j}\n              row={row}\n              key={`${row}-${j}`}\n              isLastCell={isLastRow && j === cells.length - 1}\n            />\n          ))\n        : \"...\"}\n    </div>\n  );\n};\n\nexport default Row;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Row from \"./Row\";\nimport LazyLoad from \"react-lazyload\";\n\nimport { addRow } from \"../reducers\";\nconst Spinner = () => (\n  <div className=\"post loading\">\n    <svg\n      width=\"80\"\n      height=\"80\"\n      viewBox=\"0 0 100 100\"\n      preserveAspectRatio=\"xMidYMid\"\n    >\n      <circle\n        cx=\"50\"\n        cy=\"50\"\n        fill=\"none\"\n        stroke=\"#49d1e0\"\n        strokeWidth=\"10\"\n        r=\"35\"\n        strokeDasharray=\"164.93361431346415 56.97787143782138\"\n        transform=\"rotate(275.845 50 50)\"\n      >\n        <animateTransform\n          attributeName=\"transform\"\n          type=\"rotate\"\n          calcMode=\"linear\"\n          values=\"0 50 50;360 50 50\"\n          keyTimes=\"0;1\"\n          dur=\"1s\"\n          begin=\"0s\"\n          repeatCount=\"indefinite\"\n        />\n      </circle>\n    </svg>\n  </div>\n);\nclass Body extends React.Component {\n  render() {\n    const { rows} = this.props;\n    return (\n\n      <div className={\"body\"}>\n        {rows.length &&\n          rows.map((cells, i) => (\n            <LazyLoad\n          key={i}\n          height={100}\n          offset={[-100, 100]}\n          placeholder={<Spinner />}\n        >\n            <Row\n              cells={cells}\n              row={i}\n              key={\"row-\" + i}\n              isLastRow={i === rows.length - 1}\n            />\n             </LazyLoad>\n          ))}\n      </div>\n     \n    );\n  }\n}\n\nconst mapStateToProps = ({ table }) => {\nreturn {\n  rows: table.rows\n};\n}\n\nconst mapDispatchToProps = {\n  addRow\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Body);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Headers from \"./Headers\";\nimport Body from \"./Body\";\n\nimport { addRow, validateCells } from \"../reducers\";\n\n\nclass Table extends React.Component {\n\n  render() {\n    return (\n      <div>\n        <div className={\"table-wrapper\"}>\n          <div className={\"table\"}>\n            <Headers />\n            <Body />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  addRow,\n  validateCells\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(Table);\n","import React from 'react';\r\n// import { Counter } from './features/counter/Counter';\r\nimport './App.css';\r\nimport FileUpload from  '../src/upload/FileUpload';\r\nimport Table from  '../src/Table/Table';\r\nimport { connect } from \"react-redux\";\r\nimport { initialiseTable } from '../src/reducers';\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.props.initialiseTable();\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <FileUpload />\r\n          <Table />\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  initialiseTable\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport configStore from \"./app/store\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from './serviceWorker';\r\nimport \"./index.css\";\r\n\r\nconst store = configStore();\r\nconst rootElement = document.getElementById(\"root\");\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  rootElement\r\n);\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}